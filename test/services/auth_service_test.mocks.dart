// Mocks generated by Mockito 5.4.6 from annotations
// in question_auth/test/services/auth_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:mockito/mockito.dart' as _i1;
import 'package:question_auth/src/models/auth_request.dart' as _i6;
import 'package:question_auth/src/models/auth_response.dart' as _i2;
import 'package:question_auth/src/models/user.dart' as _i3;
import 'package:question_auth/src/repositories/auth_repository.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeAuthResponse_0 extends _i1.SmartFake implements _i2.AuthResponse {
  _FakeAuthResponse_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeUser_1 extends _i1.SmartFake implements _i3.User {
  _FakeUser_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [AuthRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthRepository extends _i1.Mock implements _i4.AuthRepository {
  MockAuthRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.AuthResponse> signUp(_i6.SignUpRequest? request) =>
      (super.noSuchMethod(
            Invocation.method(#signUp, [request]),
            returnValue: _i5.Future<_i2.AuthResponse>.value(
              _FakeAuthResponse_0(this, Invocation.method(#signUp, [request])),
            ),
          )
          as _i5.Future<_i2.AuthResponse>);

  @override
  _i5.Future<_i2.AuthResponse> login(_i6.LoginRequest? request) =>
      (super.noSuchMethod(
            Invocation.method(#login, [request]),
            returnValue: _i5.Future<_i2.AuthResponse>.value(
              _FakeAuthResponse_0(this, Invocation.method(#login, [request])),
            ),
          )
          as _i5.Future<_i2.AuthResponse>);

  @override
  _i5.Future<_i3.User> getCurrentUser() =>
      (super.noSuchMethod(
            Invocation.method(#getCurrentUser, []),
            returnValue: _i5.Future<_i3.User>.value(
              _FakeUser_1(this, Invocation.method(#getCurrentUser, [])),
            ),
          )
          as _i5.Future<_i3.User>);

  @override
  _i5.Future<void> logout() =>
      (super.noSuchMethod(
            Invocation.method(#logout, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);
}
